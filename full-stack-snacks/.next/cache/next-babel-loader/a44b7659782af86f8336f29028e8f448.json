{"ast":null,"code":"var _jsxFileName = \"/Users/stephen/codefellows/401/labs/lab42/full-stack-snacks/full_stack_snacks/pages/components/snackForm.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nexport default class SnackForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      snackName: props.name,\n      description: props.desc\n    };\n    this.doneHandler = props.doneHandler;\n    this.updateHandler = this.updateHandler.bind(this);\n    this.submitHandler = this.submitHandler.bind(this);\n  }\n\n  updateHandler(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  submitHandler(event) {\n    event.preventDefault(); // submission of NEW snack\n\n    if (!this.props.idNum) {\n      let newId = Date.now();\n      let newSnack = {\n        id: newId,\n        title: this.state.snackName,\n        description: this.state.description\n      };\n      this.doneHandler(newSnack);\n      this.setState({\n        snackName: '',\n        description: ''\n      }); // Updating snack\n    } else {\n      let newSnack = {\n        id: this.props.idNum,\n        title: this.state.snackName,\n        description: this.state.description\n      };\n      this.doneHandler(newSnack);\n      this.setState({\n        snackName: this.state.snackName,\n        description: this.state.description\n      });\n    }\n  }\n\n  render() {\n    return __jsx(\"form\", {\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"text\",\n      name: \"snackName\",\n      value: this.state.snackName,\n      onChange: this.updateHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), __jsx(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.updateHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"ok\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/stephen/codefellows/401/labs/lab42/full-stack-snacks/full_stack_snacks/pages/components/snackForm.js"],"names":["React","SnackForm","Component","constructor","props","state","snackName","name","description","desc","doneHandler","updateHandler","bind","submitHandler","event","setState","target","value","preventDefault","idNum","newId","Date","now","newSnack","id","title","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAGF,KAAK,CAACG,IADT;AAETC,MAAAA,WAAW,EAAGJ,KAAK,CAACK;AAFX,KAAb;AAIA,SAAKC,WAAL,GAAmBN,KAAK,CAACM,WAAzB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAEDD,EAAAA,aAAa,CAACG,KAAD,EAAO;AAChB,SAAKC,QAAL,CAAc;AACV,OAACD,KAAK,CAACE,MAAN,CAAaT,IAAd,GAAqBO,KAAK,CAACE,MAAN,CAAaC;AADxB,KAAd;AAGH;;AAEDJ,EAAAA,aAAa,CAACC,KAAD,EAAO;AAChBA,IAAAA,KAAK,CAACI,cAAN,GADgB,CAEhB;;AACA,QAAG,CAAC,KAAKd,KAAL,CAAWe,KAAf,EAAqB;AACjB,UAAIC,KAAK,GAAGC,IAAI,CAACC,GAAL,EAAZ;AACA,UAAIC,QAAQ,GAAG;AAACC,QAAAA,EAAE,EAAEJ,KAAL;AAAYK,QAAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWC,SAA9B;AAAyCE,QAAAA,WAAW,EAAE,KAAKH,KAAL,CAAWG;AAAjE,OAAf;AACA,WAAKE,WAAL,CAAiBa,QAAjB;AACA,WAAKR,QAAL,CAAc;AACVT,QAAAA,SAAS,EAAE,EADD;AAEVE,QAAAA,WAAW,EAAE;AAFH,OAAd,EAJiB,CAQrB;AACC,KATD,MASK;AACD,UAAIe,QAAQ,GAAG;AAACC,QAAAA,EAAE,EAAE,KAAKpB,KAAL,CAAWe,KAAhB;AAAuBM,QAAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWC,SAAzC;AAAoDE,QAAAA,WAAW,EAAE,KAAKH,KAAL,CAAWG;AAA5E,OAAf;AACA,WAAKE,WAAL,CAAiBa,QAAjB;AACA,WAAKR,QAAL,CAAc;AACVT,QAAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,SADZ;AAEVE,QAAAA,WAAW,EAAE,KAAKH,KAAL,CAAWG;AAFd,OAAd;AAIH;AACJ;;AAEDkB,EAAAA,MAAM,GAAE;AACJ,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKb,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,WAAxB;AAAoC,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,SAAtD;AAAiE,MAAA,QAAQ,EAAE,KAAKK,aAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,aAAxB;AAAsC,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWG,WAAxD;AAAqE,MAAA,QAAQ,EAAE,KAAKG,aAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,CADJ;AAOH;;AAhDkD","sourcesContent":["import React from 'react';\n\nexport default class SnackForm extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            snackName : props.name,\n            description : props.desc,\n        }\n        this.doneHandler = props.doneHandler\n        this.updateHandler = this.updateHandler.bind(this);\n        this.submitHandler = this.submitHandler.bind(this);\n    }\n\n    updateHandler(event){\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    submitHandler(event){\n        event.preventDefault()\n        // submission of NEW snack\n        if(!this.props.idNum){\n            let newId = Date.now()\n            let newSnack = {id: newId, title: this.state.snackName, description: this.state.description}\n            this.doneHandler(newSnack)\n            this.setState({\n                snackName: '',\n                description: '',\n            })\n        // Updating snack\n        }else{\n            let newSnack = {id: this.props.idNum, title: this.state.snackName, description: this.state.description}\n            this.doneHandler(newSnack)\n            this.setState({\n                snackName: this.state.snackName,\n                description: this.state.description,\n            })\n        }\n    }\n\n    render(){\n        return(\n            <form onSubmit={this.submitHandler}>\n                <input type=\"text\" name=\"snackName\" value={this.state.snackName} onChange={this.updateHandler}/>\n                <input type=\"text\" name=\"description\" value={this.state.description} onChange={this.updateHandler}/>\n                <button>ok</button>\n            </form>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}