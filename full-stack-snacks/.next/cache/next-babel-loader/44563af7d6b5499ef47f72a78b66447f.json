{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport LoginForm from './components/LoginForm'; // import './App.css';\n\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport SnackDetail from './components/snackDetail';\nimport SnackList from './components/snackList';\nimport SnackForm from './components/snackForm';\nvar url = 'http://167.172.203.221:8000/api/';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      accessToken: '',\n      refreshToken: '',\n      snacks: null // snacks: [\n      //   {id: 1234, name: \"abcd\", desc: \"yaya\"},\n      //   {id: 5678, name: \"efgh\", desc: \"nana\"},\n      // ]      \n\n    };\n    _this.renderSnackDetail = _this.renderSnackDetail.bind(_assertThisInitialized(_this));\n    _this.formHandler = _this.formHandler.bind(_assertThisInitialized(_this));\n    _this.deleteHandler = _this.deleteHandler.bind(_assertThisInitialized(_this));\n    _this.updateHandler = _this.updateHandler.bind(_assertThisInitialized(_this));\n    _this.loginHandler = _this.loginHandler.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loginHandler\",\n    value: function loginHandler(_ref) {\n      var access, refresh, headers, response;\n      return _regeneratorRuntime.async(function loginHandler$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              access = _ref.access, refresh = _ref.refresh;\n              this.setState({\n                accessToken: access,\n                refreshToken: refresh\n              });\n              _context.prev = 2;\n              headers = {\n                headers: {\n                  Authorization: \"Bearer \".concat(this.state.accessToken)\n                }\n              };\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(axios.get(url + 'v1/', headers));\n\n            case 6:\n              response = _context.sent;\n              console.log(response.data);\n              this.setState({\n                snacks: response.data\n              });\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n              console.error('ruhroh');\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[2, 11]]);\n    }\n  }, {\n    key: \"renderSnackDetail\",\n    value: function renderSnackDetail(props) {\n      if (!this.state.accessToken) {\n        return __jsx(Redirect, {\n          to: \"/\"\n        });\n      }\n\n      var snackId = _parseInt(props.match.params.id);\n\n      var snack = this.state.snacks && this.state.snacks.find(function (snack) {\n        return snack.id === snackId;\n      });\n      console.log('trying to render {snack}: ', snack);\n\n      if (snack) {\n        return __jsx(SnackDetail, {\n          snack: snack,\n          doneHandler: this.updateHandler,\n          deleteHandler: this.deleteHandler\n        });\n      } else {\n        return __jsx(Redirect, {\n          to: \"/\"\n        });\n      }\n    }\n  }, {\n    key: \"formHandler\",\n    value: function formHandler(snack) {\n      var newSnack, newList;\n      return _regeneratorRuntime.async(function formHandler$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              newSnack = snack;\n              newList = this.state.snacks;\n              newList.push(newSnack);\n              this.setState({\n                snacks: newList\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"updateHandler\",\n    value: function updateHandler(snack) {\n      return _regeneratorRuntime.async(function updateHandler$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log('input update: ', snack);\n              this.setState({\n                snacks: this.state.snacks.map(function (snk) {\n                  if (snk.id === snack.id) {\n                    return snack;\n                  } else {\n                    return snk;\n                  }\n                })\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"deleteHandler\",\n    value: function deleteHandler(event) {\n      var snackToDelete, lst;\n      return _regeneratorRuntime.async(function deleteHandler$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              snackToDelete = event.target.value;\n              console.log('should be id: ', snackToDelete);\n              lst = this.state.snacks.filter(function (snack) {\n                return snack.id !== Number(snackToDelete);\n              });\n              this.setState({\n                snacks: lst\n              });\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Router, null, __jsx(\"h1\", null, \"Hello World\"), __jsx(Switch, null, __jsx(Route, {\n        exact: true,\n        path: \"/\"\n      }, this.state.snacks ? __jsx(SnackList, {\n        snacks: this.state.snacks,\n        doneHandler: this.formHandler\n      }) : __jsx(LoginForm, {\n        onSuccess: this.loginHandler\n      })), __jsx(Route, {\n        path: \"/:id\",\n        render: this.renderSnackDetail\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":null,"metadata":{},"sourceType":"module"}