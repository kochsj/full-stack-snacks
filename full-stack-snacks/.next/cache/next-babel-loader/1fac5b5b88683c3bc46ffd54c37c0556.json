{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nvar SnackForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SnackForm, _React$Component);\n\n  function SnackForm(props) {\n    var _this;\n\n    _classCallCheck(this, SnackForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SnackForm).call(this, props));\n    _this.state = {\n      snackName: props.name,\n      description: props.desc\n    };\n    _this.doneHandler = props.doneHandler;\n    _this.updateHandler = _this.updateHandler.bind(_assertThisInitialized(_this));\n    _this.submitHandler = _this.submitHandler.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SnackForm, [{\n    key: \"updateHandler\",\n    value: function updateHandler(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"submitHandler\",\n    value: function submitHandler(event) {\n      event.preventDefault(); // submission of NEW snack\n\n      if (!this.props.idNum) {\n        var newId = _Date$now();\n\n        var newSnack = {\n          id: newId,\n          title: this.state.snackName,\n          description: this.state.description\n        };\n        this.doneHandler(newSnack);\n        this.setState({\n          snackName: '',\n          description: ''\n        }); // Updating snack\n      } else {\n        var _newSnack = {\n          id: this.props.idNum,\n          title: this.state.snackName,\n          description: this.state.description\n        };\n        this.doneHandler(_newSnack);\n        this.setState({\n          snackName: this.state.snackName,\n          description: this.state.description\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"form\", {\n        onSubmit: this.submitHandler\n      }, __jsx(\"input\", {\n        type: \"text\",\n        name: \"snackName\",\n        value: this.state.snackName,\n        onChange: this.updateHandler\n      }), __jsx(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        value: this.state.description,\n        onChange: this.updateHandler\n      }), __jsx(\"button\", null, \"ok\"));\n    }\n  }]);\n\n  return SnackForm;\n}(React.Component);\n\nexport { SnackForm as default };","map":null,"metadata":{},"sourceType":"module"}